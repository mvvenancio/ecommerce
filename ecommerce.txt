

*Inserções para a tabela Fornecedor
INSERT INTO Fornecedor (idFornecedor, RazãoSocial, CNPJ)
VALUES
    (1, 'Fornecedor A', '123456789'),
    (2, 'Fornecedor B', '987654321'),
    (3, 'Fornecedor C', '555555555'),
    (4, 'Fornecedor D', '999999999');

*Inserções para a tabela Estoque
INSERT INTO Estoque (idEstoque, Local)
VALUES
    (1, 'Local A'),
    (2, 'Local B'),
    (3, 'Local C'),
    (4, 'Local D');

*Inserções para a tabela Produto
INSERT INTO Produto (idProduto, Categoria, Descrição, Valor)
VALUES
    (1, 'Eletrônicos', 'Smartphone', '1000'),
    (2, 'Roupas', 'Camiseta', '30'),
    (3, 'Acessórios', 'Relógio', '150'),
    (4, 'Eletrônicos', 'Tablet', '400');

*Inserções para a tabela Terceiro_Vendedor
INSERT INTO Terceiro_Vendedor (idTerceiro, RazãoSocial, Local)
VALUES
    (1, 'Vendedor X', 'Local X'),
    (2, 'Vendedor Y', 'Local Y'),
    (3, 'Vendedor Z', 'Local Z'),
    (4, 'Vendedor W', 'Local W');

*Inserções para a tabela Cliente
INSERT INTO Cliente (idCliente, Pnome, Nome_do_Meio, Sobrenome, CPF, Endereço, Data_de_Nascimento)
VALUES
    (1, 'João', 'Silva', 'Souza', '12345678901', 'Rua A', '1990-01-01'),
    (2, 'Maria', 'Gomes', 'Santos', '98765432101', 'Rua B', '1985-05-10'),
    (3, 'Pedro', 'Ferreira', 'Almeida', '45678912301', 'Rua C', '1995-09-15'),
    (4, 'Ana', 'Pereira', 'Oliveira', '78912345601', 'Rua D', '1988-12-20');

*Inserções para a tabela Pedido
INSERT INTO Pedido (idPedido, Status_do_Pedido, Descrição, Cliente_idCliente, Frete)
VALUES
    (1, 'disponível', 'Pedido 1', 1, 10.00),
    (2, 'sem estoque', 'Pedido 2', 2, 5.00),
    (3, 'disponível', 'Pedido 3', 3, 8.00),
    (4, 'disponível', 'Pedido 4', 4, 7.50);

*Inserções para a tabela Relação_de_Produto_Pedido
INSERT INTO Relação_de_Produto_Pedido (Produto_idProduto, Pedido_idPedido, Quantidade)
VALUES
    (1, 1, '2'),
    (2, 2, '3'),
    (3, 3, '1'),
    (4, 4, '2');

*Inserções para a tabela Disponibilizando_um_Produto
INSERT INTO Disponibilizando_um_Produto (Fornecedor_idFornecedor, Produto_idProduto)
VALUES
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 4);

*Inserções para a tabela Produto_has_Estoque
INSERT INTO Produto_has_Estoque (idProduto, Estoque_idEstoque, Quantidade)
VALUES
    (1, 1, 10),
    (2, 2, 20),
    (3, 3, 5),
    (4, 4, 8);

*Inserções para a tabela Produtos_por_Vendador_terceiro
INSERT INTO Produtos_por_Vendador_terceiro (Terceiro_Vendedor_idTerceiro, Produto_idProduto, Quantidade)
VALUES
    (1, 1, 3),
    (2, 2, 4),
    (3, 3, 2),
    (4, 4, 5);

Recuperações simples com SELECT:

*Recuperação simples: Listar todos os produtos
SELECT * FROM Produto;

*Recuperação simples: Listar todos os clientes
SELECT * FROM Cliente;

Filtros com WHERE:

*Filtro: Listar pedidos com status 'disponível'
SELECT * FROM Pedido WHERE Status_do_Pedido = 'disponível';

*Filtro: Listar produtos da categoria 'Eletrônicos'
SELECT * FROM Produto WHERE Categoria = 'Eletrônicos';

Expressões para gerar atributos derivados:

*Expressão: Calcular o total do pedido (valor do pedido + frete)
SELECT idPedido, Descrição, Frete AS Total
FROM pedido;

Ordenações dos dados com ORDER BY

*Ordenação: Listar produtos por valor em ordem decrescente
SELECT * FROM Produto ORDER BY Valor DESC;

*Ordenação: Listar pedidos por cliente em ordem crescente
SELECT * FROM Pedido ORDER BY Cliente_idCliente;

Junções entre tabelas para fornecer uma perspectiva mais complexa dos dados:

*Junção: Listar detalhes dos produtos em um pedido
SELECT p.Descrição AS Produto, rp.Quantidade, (p.Valor * CAST(rp.Quantidade AS DECIMAL(10,2))) AS Total
FROM Relação_de_Produto_Pedido rp
JOIN Produto p ON rp.Produto_idProduto = p.idProduto
WHERE rp.Pedido_idPedido = 1;

*Junção: Listar nome do cliente e descrição do pedido
SELECT c.Pnome AS NomeCliente, p.Descrição AS Pedido
FROM Cliente c
JOIN Pedido p ON c.idCliente = p.Cliente_idCliente;

Quantos pedidos foram feitos por cada cliente?
SELECT c.Pnome AS Cliente, COUNT(p.idPedido) AS TotalPedidos
FROM Cliente c
LEFT JOIN Pedido p ON c.idCliente = p.Cliente_idCliente
GROUP BY c.Pnome;

Algum vendedor também é fornecedor?
SELECT DISTINCT f.RazãoSocial
FROM Fornecedor f
INNER JOIN Produto_has_Estoque pe ON f.idFornecedor = pe.idProduto
INNER JOIN Produto p ON pe.idProduto = p.idProduto
WHERE p.Categoria = 'Vendedor';

Relação de produtos fornecedores e estoques?
SELECT p.Descrição AS Produto, f.RazãoSocial AS Fornecedor, e.Local AS Estoque
FROM Produto p
INNER JOIN Produto_has_Estoque pe ON p.idProduto = pe.idProduto
INNER JOIN Fornecedor f ON pe.idProduto = f.idFornecedor
INNER JOIN Estoque e ON pe.Estoque_idEstoque = e.idEstoque;

Relação de nomes dos fornecedores e nomes dos produtos?
SELECT f.RazãoSocial AS Fornecedor, p.Descrição AS Produto
FROM Fornecedor f
INNER JOIN Produto_has_Estoque pe ON f.idFornecedor = pe.idProduto
INNER JOIN Produto p ON pe.idProduto = p.idProduto;

Quanto tem no estoque?
SELECT p.Descrição AS Produto, e.idEstoque AS QuantidadeEmEstoque
FROM Produto p
INNER JOIN Produto_has_Estoque pe ON p.idProduto = pe.idProduto
INNER JOIN Estoque e ON pe.Estoque_idEstoque = e.idEstoque;

Quantos produtos foram disponibilizados?
SELECT COUNT(*) AS TotalProdutosDisponibilizados
FROM Produto_has_Estoque;

Quantos fornecedores existem?
SELECT COUNT(*) AS TotalFornecedores
FROM Fornecedor;
